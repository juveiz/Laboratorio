{"kernelspec":{"display_name":"SageMath 7.3","language":"","name":"sagemath"},"language_info":{"codemirror_mode":{"name":"ipython","version":2},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython2","version":"2.7.10"}}
{"cell_type":"raw","metadata":{},"source":"MATRICES"}
{"cell_type":"code","execution_count":1,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"data":{"text/html":"<html><script type=\"math/tex; mode=display\">\\newcommand{\\Bold}[1]{\\mathbf{#1}}\\left(\\begin{array}{rrr}\n1 & 2 & 3 \\\\\n4 & 5 & 6\n\\end{array}\\right)</script></html>","text/plain":"[1 2 3]\n[4 5 6]"},"metadata":{},"output_type":"display_data"},{"data":{"text/html":"<html><script type=\"math/tex; mode=display\">\\newcommand{\\Bold}[1]{\\mathbf{#1}}\\left(\\begin{array}{rrr}\n1 & 2 & 3 \\\\\n4 & 5 & 6\n\\end{array}\\right)</script></html>","text/plain":"[1 2 3]\n[4 5 6]"},"metadata":{},"output_type":"display_data"}],"source":"#hay dos formas diferentes\nA=matrix(ZZ,[[1,2,3],[4,5,6]]);A;show(A)\nA=matrix(ZZ,2,[1,2,3,4,5,6]);show(A)"}
{"cell_type":"code","execution_count":8,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"data":{"text/html":"smc-blob::585d618a-fdaa-4f10-9f77-4e60311f99a6","text/plain":"[  1   2   3   4   5   6   7   8   9  10]\n[ 11  12  13  14  15  16  17  18  19  20]\n[ 21  22  23  24  25  26  27  28  29  30]\n[ 31  32  33  34  35  36  37  38  39  40]\n[ 41  42  43  44  45  46  47  48  49  50]\n[ 51  52  53  54  55  56  57  58  59  60]\n[ 61  62  63  64  65  66  67  68  69  70]\n[ 71  72  73  74  75  76  77  78  79  80]\n[ 81  82  83  84  85  86  87  88  89  90]\n[ 91  92  93  94  95  96  97  98  99 100]"},"metadata":{},"output_type":"display_data"}],"source":"A=matrix(ZZ,10,[1..100])\nshow(A)"}
{"cell_type":"code","execution_count":10,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"data":{"text/plain":"[ 71  72  73  74  75  76  77  78  79  80]\n[ 81  82  83  84  85  86  87  88  89  90]\n[ 91  92  93  94  95  96  97  98  99 100]"},"execution_count":10,"metadata":{},"output_type":"execute_result"}],"source":"A[7:] #filas de indice >=7"}
{"cell_type":"code","execution_count":12,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"data":{"text/plain":"[ 1  2  3  4  5  6  7  8  9 10]\n[11 12 13 14 15 16 17 18 19 20]"},"execution_count":12,"metadata":{},"output_type":"execute_result"}],"source":"A[:2] #filas de indice<2"}
{"cell_type":"code","execution_count":14,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"data":{"text/plain":"[35 36 37]\n[45 46 47]"},"execution_count":14,"metadata":{},"output_type":"execute_result"}],"source":"A[3:5,4:7] #no lo entiendo"}
{"cell_type":"code","execution_count":15,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"data":{"text/plain":"[25 27]\n[45 47]"},"execution_count":15,"metadata":{},"output_type":"execute_result"}],"source":"A[2:5:2,4:7:2] #no lo entiendo"}
{"cell_type":"code","execution_count":20,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"data":{"text/plain":"(91, 92, 93, 94, 95, 96, 97, 98, 99, 100)"},"execution_count":20,"metadata":{},"output_type":"execute_result"}],"source":"A[-1] #la ultima fila"}
{"cell_type":"code","execution_count":24,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"data":{"text/plain":"(81, 82, 83, 84, 85, 86, 87, 88, 89, 90)"},"execution_count":24,"metadata":{},"output_type":"execute_result"}],"source":"A[-2] #la penultima fila"}
{"cell_type":"code","execution_count":21,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"data":{"text/plain":"(9, 19, 29, 39, 49, 59, 69, 79, 89, 99)"},"execution_count":21,"metadata":{},"output_type":"execute_result"}],"source":"A.column(-2) #penultima columna"}
{"cell_type":"code","execution_count":30,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"data":{"text/plain":"[1 0 0]\n[0 1 0]\n[0 0 1]"},"execution_count":30,"metadata":{},"output_type":"execute_result"}],"source":"identity_matrix(3) #matriz identidad"}
{"cell_type":"code","execution_count":41,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"data":{"text/html":"<html><script type=\"math/tex; mode=display\">\\newcommand{\\Bold}[1]{\\mathbf{#1}}\\left(\\begin{array}{rrr}\n1 & 2 & 3 \\\\\n4 & 5 & 6 \\\\\n7 & 8 & 9\n\\end{array}\\right)</script></html>","text/plain":"[1 2 3]\n[4 5 6]\n[7 8 9]"},"metadata":{},"output_type":"display_data"}],"source":"A=matrix(ZZ,3,[1,2,3,4,5,6,7,8,9]);show(A) # A.inverse() no tiene inversa porque el det=0"}
{"cell_type":"code","execution_count":48,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"data":{"text/plain":"(\n                [1 4 7]  [ -3   6  -3]        [1 2 3]  [ 1  0 -1]\n                [2 5 8]  [  6 -12   6]        [0 3 6]  [ 0  1  2]\n0, 0, 2, 2, 15, [3 6 9], [ -3   6  -3], None, [0 0 0], [ 0  0  0]\n)"},"execution_count":48,"metadata":{},"output_type":"execute_result"}],"source":"A.det(), det(A), A.rank(), rank(A),  A.trace(), A.transpose(), A.adjoint(), A.echelonize(), A.echelon_form(), A.rref()"}
{"cell_type":"code","execution_count":50,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"data":{"text/html":"<html><script type=\"math/tex; mode=display\">\\newcommand{\\Bold}[1]{\\mathbf{#1}}\\left(\\begin{array}{rrr}\n1 & 2 & 3 \\\\\n0 & 3 & 6 \\\\\n0 & 0 & 0\n\\end{array}\\right)</script></html>","text/plain":"[1 2 3]\n[0 3 6]\n[0 0 0]"},"metadata":{},"output_type":"display_data"}],"source":"#como hemos sacado la matriz escalonada esta se ha guardado en el valor de A. Si no queremos que ocurra eso poner B=A.echelon_form()\nshow(A)"}
{"cell_type":"markdown","metadata":{},"source":"ESPACIOS VECTORIALES"}
{"cell_type":"code","execution_count":67,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"Vector space of dimension 3 over Rational Field\nv: (1, 2, 3)\n"},{"data":{"text/plain":"(0, 0, 0)"},"execution_count":67,"metadata":{},"output_type":"execute_result"}],"source":"E = VectorSpace(QQ,3)\nprint E\nv = E([1,2,3])\nprint \"v:\", v\nv+(-1)*v"}
{"cell_type":"code","execution_count":63,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"data":{"text/html":"<html><script type=\"math/tex; mode=display\">\\newcommand{\\Bold}[1]{\\mathbf{#1}}\\mathrm{Mat}_{4\\times 4}(\\Bold{Q})</script></html>","text/plain":"Full MatrixSpace of 4 by 4 dense matrices over Rational Field"},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":"Full MatrixSpace of 4 by 4 dense matrices over Rational Field\n"}],"source":"#espacio de matrices\nM = MatrixSpace(QQ, 4, 4) #con operaciones de suma, producto por escalares, producto de matrices y matriz inversa.\nshow(M)\nprint M"}
{"cell_type":"markdown","metadata":{},"source":"SUBESPACIOS VECTORIALES"}
{"cell_type":"code","execution_count":89,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"Vector space of degree 3 and dimension 2 over Rational Field\nBasis matrix:\n[1 1 0]\n[0 0 1]\n"}],"source":"V1 = VectorSpace(QQ,3)\nv1 = V1([1,1,1])\nv2 = V1([1,1,0])\nL1 = V1.subspace([v1,v2])\nprint L1"}
{"cell_type":"code","execution_count":90,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"dim: 2 grado: 3\nVector space of dimension 3 over Rational Field\n"}],"source":"print \"dim:\", dim(L1), \"grado:\", L1.degree(); print L1.ambient_vector_space()"}
{"cell_type":"code","execution_count":98,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"(1, 0, 1) (4, 4, 3)\nFalse\nFalse\nTrue\nTrue\nFalse\nTrue\n* Interseccion de subespacios: \nVector space of degree 3 and dimension 1 over Rational Field\nBasis matrix:\n[1 1 1]\n* Suma de subespacios: \nVector space of degree 3 and dimension 3 over Rational Field\nBasis matrix:\n[1 0 0]\n[0 1 0]\n[0 0 1]\n"}],"source":"# Pertenencia a un subespacio\nv3, v4 = vector([1,0,1]), vector([4,4,3])\nprint v3, v4\nprint v3 in L1; v4 in L1\n#Comprobacion de igualdad\nprint L1 == V1\nprint L1 == V1.subspace([v1,v1+v2])\n#Comprobacion de inclusion\nprint L1 <= V1; print L1 >= V1; print L1 >= V1.subspace([v1])\n#Interseccion y suma de subespacios\nL1 = V1.subspace([(1,1,0),(0,0,1)])\nL2 = V1.subspace([(1,0,1),(0,1,0)])\nL3 = L1.intersection(L2)\nprint '* Interseccion de subespacios: '\nprint L3\nL4 = L1+L2\nprint '* Suma de subespacios: '; print L4\n"}
{"cell_type":"code","execution_count":114,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"[1, 0] [1, 1]\n"}],"source":"#coordenadas del vecto v1 en L1 y L2\nprint L1.coordinates(v1), L2.coordinates(v1)"}
{"cell_type":"code","execution_count":115,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"Vector space of degree 3 and dimension 2 over Rational Field\nBasis matrix:\n[1 1 0]\n[0 0 1]\n[\n(1, 1, 1),\n(1, 1, 0)\n]\n"}],"source":"#aqui se guarda e imprime con una base del subespacio\nL2 = V1.subspace([v1,v2])\nprint L2\n#aqui se guarda e imprime con los generadores que nosotros metemos\nL3 = V1.subspace_with_basis([v1,v2])\nprint L3.basis() #L3.basis_matrix()\n"}
{"cell_type":"raw","metadata":{},"source":"PRODUCTO ESCALAR"}
{"cell_type":"code","execution_count":128,"metadata":{"collapsed":true,"trusted":true},"outputs":[],"source":"V = VectorSpace(QQ,2, inner_product_matrix=[[1,2],[2,1]])"}
{"cell_type":"code","execution_count":129,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"ename":"AttributeError","evalue":"'sage.symbolic.expression.Expression' object has no attribute 'dot_product'","output_type":"error","traceback":["\u001b[1;31m---------------------------------------------------------------------------\u001b[0m","\u001b[1;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[1;32m<ipython-input-129-1e40f2211a58>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mu\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdot_product\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mv\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;31m# producto escalar, u · v\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      2\u001b[0m \u001b[0mu\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcross_product\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mv\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;31m# producto vectorial, u × v\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      3\u001b[0m \u001b[0mu\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mpairwise_product\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mv\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;31m# producto elemento a elemento\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      4\u001b[0m \u001b[0mnorm\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mu\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mu\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mnorm\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mu\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mnorm\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mInteger\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;36m2\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;31m# norma Euclıdea\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      5\u001b[0m \u001b[0mu\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mnorm\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mInteger\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;31m# suma de coordenadas en valor absoluto\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n","\u001b[1;32m/projects/sage/sage-7.3/src/sage/structure/element.pyx\u001b[0m in \u001b[0;36msage.structure.element.Element.__getattr__ (/projects/sage/sage-7.3/src/build/cythonized/sage/structure/element.c:4152)\u001b[1;34m()\u001b[0m\n\u001b[0;32m    317\u001b[0m             \u001b[0mdummy_error_message\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mname\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mname\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    318\u001b[0m             \u001b[1;32mraise\u001b[0m \u001b[0mdummy_attribute_error\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 319\u001b[1;33m         \u001b[1;32mreturn\u001b[0m \u001b[0mgetattr_from_other_class\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mP\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_abstract_element_class\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mname\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    320\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    321\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0m__dir__\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n","\u001b[1;32m/projects/sage/sage-7.3/src/sage/structure/misc.pyx\u001b[0m in \u001b[0;36msage.structure.misc.getattr_from_other_class (/projects/sage/sage-7.3/src/build/cythonized/sage/structure/misc.c:1879)\u001b[1;34m()\u001b[0m\n\u001b[0;32m    257\u001b[0m         \u001b[0mdummy_error_message\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcls\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mtype\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    258\u001b[0m         \u001b[0mdummy_error_message\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mname\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mname\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 259\u001b[1;33m         \u001b[1;32mraise\u001b[0m \u001b[0mdummy_attribute_error\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    260\u001b[0m     \u001b[1;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mattribute\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mmethodwrapper\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    261\u001b[0m         \u001b[0mdummy_error_message\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcls\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mtype\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n","\u001b[1;31mAttributeError\u001b[0m: 'sage.symbolic.expression.Expression' object has no attribute 'dot_product'"]}],"source":"u.dot_product(v) # producto escalar, u · v\nu.cross_product(v) # producto vectorial, u × v\nu.pairwise_product(v) # producto elemento a elemento\nnorm(u), u.norm(), u.norm(2) # norma Euclıdea\nu.norm(1) # suma de coordenadas en valor absoluto\nu.norm(Infinity) #coordenada con mayor valor absoluto\nu.inner_product(v) #producto escalar utilizando la matriz del producto escalar"}
{"cell_type":"code","execution_count":null,"metadata":{"collapsed":true,"trusted":true},"outputs":[],"source":""}