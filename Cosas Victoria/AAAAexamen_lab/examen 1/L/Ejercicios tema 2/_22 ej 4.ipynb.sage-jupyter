{"kernelspec":{"display_name":"SageMath 7.3","language":"","name":"sagemath"},"language_info":{"codemirror_mode":{"name":"ipython","version":2},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython2","version":"2.7.10"}}
{"cell_type":"markdown","metadata":{},"source":"a)"}
{"cell_type":"code","execution_count":5,"metadata":{"collapsed":false,"trusted":false},"outputs":[{"data":{"text/plain":"+Infinity"},"execution_count":5,"metadata":{},"output_type":"execute_result"}],"source":"l = x**2/(x + 2)\nl.limit(x = +oo)"}
{"cell_type":"markdown","metadata":{},"source":"b)"}
{"cell_type":"code","execution_count":6,"metadata":{"collapsed":false,"trusted":false},"outputs":[{"data":{"text/plain":"1"},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":"l = x**3/(x**3 + 2*x + 1)\nl.limit(x = +oo)"}
{"cell_type":"markdown","metadata":{},"source":"l)"}
{"cell_type":"code","execution_count":8,"metadata":{"collapsed":false,"trusted":false},"outputs":[{"data":{"text/plain":"1/3"},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":"l = (3**x + (-2)**x)/(3**(x+1) + (-2)**(x+1))\nl.limit(x = +oo)"}
{"cell_type":"markdown","metadata":{},"source":"Ã±)"}
{"cell_type":"code","execution_count":15,"metadata":{"collapsed":false,"trusted":false},"outputs":[{"ename":"TypeError","evalue":"unable to simplify to float approximation","output_type":"error","traceback":["\u001b[1;31m---------------------------------------------------------------------------\u001b[0m","\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[1;32m<ipython-input-15-554e06238f98>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[0mfunction\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mi\u001b[0m\u001b[1;33m/\u001b[0m\u001b[0mx\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mInteger\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;36m2\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 2\u001b[1;33m \u001b[0mlimit\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0msum\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mfunction\u001b[0m \u001b[1;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[1;32min\u001b[0m \u001b[0msrange\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mInteger\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mx\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mx\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;33m+\u001b[0m\u001b[0moo\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[1;32msage/arith/srange.pyx\u001b[0m in \u001b[0;36msage.arith.srange.srange (/usr/lib/sagemath//src/build/cythonized/sage/arith/srange.c:4034)\u001b[1;34m()\u001b[0m\n","\u001b[1;32msage/arith/srange.pyx\u001b[0m in \u001b[0;36mxsrange (/usr/lib/sagemath//src/build/cythonized/sage/arith/srange.c:3608)\u001b[1;34m()\u001b[0m\n","\u001b[1;32msage/symbolic/expression.pyx\u001b[0m in \u001b[0;36msage.symbolic.expression.Expression.__float__ (/usr/lib/sagemath//src/build/cythonized/sage/symbolic/expression.cpp:10434)\u001b[1;34m()\u001b[0m\n","\u001b[1;31mTypeError\u001b[0m: unable to simplify to float approximation"]}],"source":"function = i/x^2\nlimit(sum(function for i in srange(1,x)), x = +oo)"}
{"cell_type":"code","execution_count":null,"metadata":{"collapsed":true,"trusted":false},"outputs":[],"source":""}